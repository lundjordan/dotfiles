servers = (
  {
    address = "irc.mozilla.org";
    chatnet = "moznet";
    port = "6697";
    use_ssl = "yes";
    ssl_verify = "no";
    autoconnect = "yes";
  },

  {
    address = "irc.freenode.net";
    chatnet = "Freenode";
    port = "6667";
    use_ssl = "no";
    ssl_verify = "no";
    autoconnect = "no";
  },
  {
    address = "irc.quakenet.org";
    chatnet = "QuakeNet";
    port = "6667";
    autoconnect = "yes";
  },
  {
    address = "localhost";
    chatnet = "bitlbee";
    port = "6667";
    use_ssl = "no";
    ssl_verify = "no";
    autoconnect = "yes";
  }
);

chatnets = {
  moznet = {
    type = "IRC";
    nick = "jlund";
    username = "jlund";
    realname = "Jordan Lund";
  };

  Freenode = { type = "IRC"; nick = "lundjordan"; };

  QuakeNet = {
    type = "IRC";
    nick = "jlund";
    realname = "Jordan Lund";
    max_kicks = "1";
    max_msgs = "3";
    max_whois = "30";
  };
  bitlbee = { type = "IRC"; };
};

channels = (
  {
    name = "#mozbuild";
    chatnet = "moznet";
    autojoin = "yes";
    password = "BlueDiamonds";
  },
  { name = "#dt354"; chatnet = "QuakeNet"; autojoin = "yes"; },
  { name = "#toronto"; chatnet = "moznet"; autojoin = "yes"; },
  { name = "#build"; chatnet = "moznet"; autojoin = "yes"; },
  { name = "#ateam"; chatnet = "moznet"; autojoin = "yes"; },
  { name = "&bitlbee"; chatnet = "bitlbee"; autojoin = "yes"; }
);

aliases = {
  J = "join";
  WJOIN = "join -window";
  WQUERY = "query -window";
  LEAVE = "part";
  BYE = "quit";
  EXIT = "quit";
  SIGNOFF = "quit";
  DESCRIBE = "action";
  DATE = "time";
  HOST = "userhost";
  LAST = "lastlog";
  SAY = "msg *";
  WI = "whois";
  WII = "whois $0 $0";
  WW = "whowas";
  W = "whois $0 $0";
  N = "names";
  M = "msg";
  T = "topic";
  C = "clear";
  CL = "clear";
  K = "kick";
  KB = "kickban";
  KN = "knockout";
  BANS = "ban";
  B = "ban";
  MUB = "unban *";
  UB = "unban";
  IG = "ignore";
  UNIG = "unignore";
  SB = "scrollback";
  UMODE = "mode $N";
  WC = "window close";
  WN = "window new hide";
  GOTO = "sb goto";
  Q = "QUERY";
  win = "window";
  ll = "lastlog jlund 20";
  lc = "lastlog -clear";
};

statusbar = {
  # formats:
  # when using {templates}, the template is shown only if it's argument isn't
  # empty unless no argument is given. for example {sb} is printed always,
  # but {sb $T} is printed only if $T isn't empty.

  items = {
    # start/end text in statusbars
    barstart = "{sbstart}";
    barend = "{sbend}";

    topicbarstart = "{topicsbstart}";
    topicbarend = "{topicsbend}";

    # treated "normally", you could change the time/user name to whatever
    time = "{sb $Z}";
    user = "{sb {sbnickmode $cumode}$N{sbmode $usermode}{sbaway $A}}";

    # treated specially .. window is printed with non-empty windows,
    # window_empty is printed with empty windows
    window = "{sb $winref:$itemname{sbmode $M}}";
    window_empty = "{sb $winref{sbservertag $tag}}";
    prompt = "{prompt $[.15]itemname}";
    prompt_empty = "{prompt $winname}";
    topic = " $topic";
    topic_empty = " Irssi v$J - http://irssi.org/help/";

    # all of these treated specially, they're only displayed when needed
    lag = "{sb Lag: $0-}";
    act = "{sb Act: $0-}";
    more = "-- more --";
  };

  # there's two type of statusbars. root statusbars are either at the top
  # of the screen or at the bottom of the screen. window statusbars are at
  # the top/bottom of each split window in screen.
  default = {
    # the "default statusbar" to be displayed at the bottom of the window.
    # contains all the normal items.
    window = {
      disabled = "no";

      # window, root
      type = "window";
      # top, bottom
      placement = "bottom";
      # number
      position = "1";
      # active, inactive, always
      visible = "active";

      # list of items in statusbar in the display order
      items = {
        barstart = { priority = "100"; };
        time = { };
        user = { };
        window = { };
        window_empty = { };
        lag = { priority = "-1"; };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
      };
    };

    # statusbar to use in inactive split windows
    window_inact = {
      type = "window";
      placement = "bottom";
      position = "1";
      visible = "inactive";
      items = {
        barstart = { priority = "100"; };
        window = { };
        window_empty = { };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
      };
    };

    # we treat input line as yet another statusbar :) It's possible to
    # add other items before or after the input line item.
    prompt = {
      type = "root";
      placement = "bottom";
      # we want to be at the bottom always
      position = "100";
      visible = "always";
      items = {
        prompt = { priority = "-1"; };
        prompt_empty = { priority = "-1"; };
        # treated specially, this is the real input line.
        input = { priority = "10"; };
      };
    };

    # topicbar
    topic = {
      type = "root";
      placement = "top";
      position = "1";
      visible = "always";
      items = {
        topicbarstart = { priority = "100"; };
        topic = { };
        topic_empty = { };
        topicbarend = { priority = "100"; alignment = "right"; };
      };
    };
    awl_0 = {
      items = {
        barstart = { priority = "100"; };
        awl_0 = { };
        barend = { priority = "100"; alignment = "right"; };
      };
    };
    awl_1 = {
      items = {
        barstart = { priority = "100"; };
        awl_1 = { };
        barend = { priority = "100"; alignment = "right"; };
      };
    };
  };
};
settings = {
  core = {
    real_name = "Jordan Lund";
    user_name = "jlund";
    nick = "jlund";
    server_connect_timeout = "3min";
    server_reconnect_time = "5";
    timestamp_format = "[%H:%M:%S]";
    cmdchars = ",/";
    recode_fallback = "UTF-8";
    recode_out_default_charset = "UTF-8";
    log_timestamp = "%H:%M:%S ";
    ignore_signals = " ";
  };
  "fe-text" = {
    scrollback_time = "3days";
    scrollback_lines = "0";
    actlist_sort = "refnum";
  };
  "fe-common/core" = {
    autolog = "yes";
    autolog_path = "~/irclogs/$tag/%Y/$0.%Y%m%d.log";
    autolog_colors = "no";
    show_nickmode = "no";
    autoclose_windows = "yes";
    term_charset = "utf-8";
    hilight_nick_matches = "yes";
    activity_hide_level = "joins parts quits nicks modes";
    autolog_level = "all";
    theme = "xchat";
  };
  "irc/core" = {
    usermode = "+iwx";
    alternate_nick = "jlund_";
    lag_max_before_disconnect = "1min";
    ctcp_version_reply = "";
  };
  "perl/core/scripts" = {
    screen_away_repeat = "10";
    screen_away_message = "screen detached";
    channel_remove_on_part = "yes";
    awl_display_key = "$Q%K|%n$H$C$S";
    awl_block = "-15";
    nicklist_width = "10";
  };
};
logs = {
  "~/irc.log.(status)" = {
    level = "ALL";
    items = ( { type = "window"; name = "1"; } );
  };
};
keyboard = (
  { key = "meta-q"; id = "change_window"; data = "11"; },
  { key = "meta-w"; id = "change_window"; data = "12"; },
  { key = "meta-f"; id = "change_window"; data = "13"; },
  { key = "meta-p"; id = "change_window"; data = "14"; },
  { key = "meta-g"; id = "change_window"; data = "15"; },
  { key = "meta-l"; id = "change_window"; data = "16"; }
);
hilights = (
  { text = "jlund"; nick = "yes"; word = "yes"; },
  { text = "!squirrel"; nick = "yes"; word = "yes"; },
  { text = "mozharness"; nick = "yes"; word = "yes"; }
);
ignores = ( );

windows = {
  1 = {
    immortal = "yes";
    name = "(status)";
    servertag = "moznet";
    level = "CRAP PUBLICS NOTICES SNOTES CTCPS ACTIONS JOINS PARTS QUITS KICKS MODES TOPICS WALLOPS INVITES NICKS DCC DCCMSGS CLIENTNOTICES CLIENTCRAP CLIENTERRORS HILIGHTS";
  };
  2 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#mozbuild";
        tag = "moznet";
      }
    );
  };
  3 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#dt354";
        tag = "QuakeNet";
      }
    );
  };
  4 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#toronto";
        tag = "moznet";
      }
    );
  };
  5 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#build";
        tag = "moznet";
      }
    );
  };
  6 = { name = "hilight"; sticky = "yes"; };
};
mainwindows = {
  2 = { first_line = "11"; lines = "16"; };
  6 = { first_line = "1"; lines = "10"; };
};
