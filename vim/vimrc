syntax on

set background=dark               " theme

set clipboard=unnamed             " for mac os x pbcopy clipboard

set rtp+=/usr/local/opt/fzf       " install fzf

set showcmd                       " Display incomplete commands.
set showmode                      " Display the mode you're in.

set backspace=indent,eol,start    " Intuitive backspacing.

set ignorecase                    " Case-insensitive searching.
set smartcase                     " But case-sensitive if expression contains a capital letter.

set ruler                         " Show cursor position.

set incsearch                     " Highlight matches as you type.
set hlsearch                      " Highlight matches.

set wrap                          " Turn on line wrapping.
set scrolloff=3                   " Show 3 lines of context around the cursor.

set title                         " Set the terminal's title

set visualbell                    " No beeping.

set nobackup                      " Don't make a backup before overwriting a file.
set nowritebackup                 " And again.
set directory=$HOME/.vim_swps//,  " Keep swap files in one location


set laststatus=2                  " Show the status line all the time

set autoread                      " autoread a file if detected to be modified outside of vim

set pastetoggle=<F2>              " use F2 to toggle between paste with and without formatting (e.g. line wrap)


" Useful status information at bottom of screen
set statusline=[%n]\ %<%.99f\ %h%w%m%r%y\ %{exists('*CapsLockStatusline')?CapsLockStatusline():''}%=%-16(\ %l,%c-%v\ %)%P


" use symbols for unwanted invisible chars
set list listchars=tab:▷⋅,trail:⋅,nbsp:⋅

""" indent and width settings
set tabstop=4                    " Global tab width.
set shiftwidth=4                 " And again, related.
set expandtab                    " Use spaces instead of tabs
autocmd Filetype python setlocal tabstop=4 softtabstop=4 shiftwidth=4 textwidth=79 expandtab autoindent fileformat=unix
autocmd FileType html css setlocal shiftwidth=2 tabstop=2
autocmd FileType puppet setlocal tabstop=4 expandtab shiftwidth=4 softtabstop=4

" setup line numbers
set rnu
au BufEnter * :set rnu
au BufLeave * :set nu
au WinEnter * :set rnu
au WinLeave * :set nu
au InsertEnter * :set nu
au InsertLeave * :set rnu
au FocusLost * :set nu
au FocusGained * :set rnu

" remap leader to space
nnoremap <SPACE> <Nop>
let mapleader=" "

"clear search history
noremap <silent><Leader>] :nohls<CR>

"buffers
"switch to previous buffer
noremap <Leader>\ <C-^>

"remove all trailing white spaces
noremap <leader>W :%s/\s\+$//<cr>:let @/=''<cr>

"refactor highlighted word
noremap <leader>r yiw:%s/<C-r>"/

"search find look
noremap <leader>f yiw:/<C-r>0<CR>N
noremap <leader>F yiw/def <C-r>0<CR>

" TODO figure out if we need wild* with fzf.vim
" set wildmode=longest,list,full
" set wildmenu

" TODO figure out if we need pymode
"python settings
" let g:pymode_run_key = 'R'
" let g:pymode_breakpoint_key = 'B'
" let g:pymode_doc_key = '<M-M>'
" let g:pymode_trim_whitespaces = 0
" let g:pymode_folding = 0
" let g:pymode_rope = 0


""" PLUGINS

" nerdtree toggle
map <Leader>t :NERDTree<Enter>

" fzf
" https://github.com/zenbro/dotfiles/blob/d3f4bd3/.nvimrc#L220-L264
nnoremap <silent> <leader><space> :Files<CR>
nnoremap <silent> <leader>a :Buffers<CR>
nnoremap <silent> <leader>A :Windows<CR>
nnoremap <silent> <leader>; :BLines<CR>
nnoremap <silent> <leader>o :BTags<CR>
nnoremap <silent> <leader>O :Tags<CR>
nnoremap <silent> <leader>? :History<CR>
nnoremap <silent> <leader>/ :execute 'Ag ' . input('Ag/')<CR>
nnoremap <silent> <leader>. :AgIn 

nnoremap <silent> K :call SearchWordWithAg()<CR>
vnoremap <silent> K :call SearchVisualSelectionWithAg()<CR>
nnoremap <silent> <leader>gl :Commits<CR>
nnoremap <silent> <leader>ga :BCommits<CR>
nnoremap <silent> <leader>ft :Filetypes<CR>

" powerline
python3 from powerline.vim import setup as powerline_setup
python3 powerline_setup()
python3 del powerline_setup
